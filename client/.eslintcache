[{"E:\\E-learning\\client\\src\\index.js":"1","E:\\E-learning\\client\\src\\App.js":"2","E:\\E-learning\\client\\src\\components\\Home\\Home.jsx":"3","E:\\E-learning\\client\\src\\components\\Navbar\\Navbar.jsx":"4","E:\\E-learning\\client\\src\\Cards\\Post\\Post.jsx":"5","E:\\E-learning\\client\\src\\firebase.js":"6","E:\\E-learning\\client\\src\\components\\Navbar\\LeftNav.jsx":"7","E:\\E-learning\\client\\src\\Cards\\Video\\Video.jsx":"8","E:\\E-learning\\client\\src\\redux\\store.js":"9","E:\\E-learning\\client\\src\\redux\\userSlice.js":"10","E:\\E-learning\\client\\src\\redux\\postSlice.js":"11"},{"size":539,"mtime":1681225612898,"results":"12","hashOfConfig":"13"},{"size":507,"mtime":1681357837277,"results":"14","hashOfConfig":"13"},{"size":701,"mtime":1681317896299,"results":"15","hashOfConfig":"13"},{"size":2417,"mtime":1681368360488,"results":"16","hashOfConfig":"13"},{"size":2810,"mtime":1681367705414,"results":"17","hashOfConfig":"13"},{"size":460,"mtime":1681115568294,"results":"18","hashOfConfig":"13"},{"size":5736,"mtime":1681364768808,"results":"19","hashOfConfig":"13"},{"size":1750,"mtime":1681356753191,"results":"20","hashOfConfig":"13"},{"size":2330,"mtime":1681352252213,"results":"21","hashOfConfig":"13"},{"size":825,"mtime":1681224032197,"results":"22","hashOfConfig":"13"},{"size":686,"mtime":1681233930444,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"n9iizf",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"E:\\E-learning\\client\\src\\index.js",[],["48","49"],"E:\\E-learning\\client\\src\\App.js",[],"E:\\E-learning\\client\\src\\components\\Home\\Home.jsx",[],"E:\\E-learning\\client\\src\\components\\Navbar\\Navbar.jsx",[],"E:\\E-learning\\client\\src\\Cards\\Post\\Post.jsx",["50","51"],"E:\\E-learning\\client\\src\\firebase.js",[],"E:\\E-learning\\client\\src\\components\\Navbar\\LeftNav.jsx",[],"E:\\E-learning\\client\\src\\Cards\\Video\\Video.jsx",["52"],"import axios from 'axios'\r\nimport './video.css'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { postRequest, postSuccess } from '../../redux/postSlice';\r\nimport React, { useEffect, useState } from 'react'\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport LeftNav from '../../components/Navbar/LeftNav';\r\n\r\nconst Video = () => {\r\n\r\n  const { user } = useSelector((state) => state.user)\r\n  const { currentPost } = useSelector((state) => state.postx)\r\n  const dispatch = useDispatch()\r\n\r\n  const path = useLocation().pathname.split(\"/\")[2]\r\n  const [channel, setChannel] = useState({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      console.log(\"jj\")\r\n      dispatch(postRequest())\r\n      console.log(\"jj1\")\r\n      try {\r\n        const videoRes = await axios.get(`/posts/find/${path}`) //to get video from the postid\r\n        console.log(\"jj2\")\r\n        const channelRes = await axios.get(`/users/find/${videoRes.data.userId}`)  //to get the channel data\r\n        console.log(\"jj3\")\r\n        setChannel(channelRes.data)\r\n        dispatch(postSuccess(videoRes.data))\r\n      } catch (error) {\r\n\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [path,dispatch])  \r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <div style={{ display: 'flex' }}>\r\n        <LeftNav />\r\n\r\n        <div>\r\n          <video width=\"400px\" controls>\r\n            <source src={currentPost && currentPost.videoUrl} type=\"video/mp4\"  />\r\n          </video>\r\n\r\n          <h3>\r\n            {currentPost && currentPost.title}\r\n          </h3>\r\n          <h6>\r\n            posted by:  {channel.name}\r\n          </h6>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Video","E:\\E-learning\\client\\src\\redux\\store.js",[],"E:\\E-learning\\client\\src\\redux\\userSlice.js",[],"E:\\E-learning\\client\\src\\redux\\postSlice.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":12,"column":12,"nodeType":"59","messageId":"60","endLine":12,"endColumn":19},{"ruleId":"57","severity":1,"message":"62","line":12,"column":11,"nodeType":"59","messageId":"60","endLine":12,"endColumn":15},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'channel' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]