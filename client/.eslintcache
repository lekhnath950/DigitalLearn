[{"E:\\E-learning\\client\\src\\index.js":"1","E:\\E-learning\\client\\src\\App.js":"2","E:\\E-learning\\client\\src\\components\\Home\\Home.jsx":"3","E:\\E-learning\\client\\src\\components\\Navbar\\Navbar.jsx":"4","E:\\E-learning\\client\\src\\Cards\\Post\\Post.jsx":"5","E:\\E-learning\\client\\src\\firebase.js":"6","E:\\E-learning\\client\\src\\components\\Navbar\\LeftNav.jsx":"7","E:\\E-learning\\client\\src\\Cards\\Video\\Video.jsx":"8","E:\\E-learning\\client\\src\\redux\\store.js":"9","E:\\E-learning\\client\\src\\redux\\userSlice.js":"10","E:\\E-learning\\client\\src\\redux\\postSlice.js":"11"},{"size":539,"mtime":1681225612898,"results":"12","hashOfConfig":"13"},{"size":507,"mtime":1681357837277,"results":"14","hashOfConfig":"13"},{"size":825,"mtime":1682303829984,"results":"15","hashOfConfig":"13"},{"size":4934,"mtime":1682303829994,"results":"16","hashOfConfig":"13"},{"size":3075,"mtime":1682303829951,"results":"17","hashOfConfig":"13"},{"size":460,"mtime":1681115568294,"results":"18","hashOfConfig":"13"},{"size":5518,"mtime":1682303829984,"results":"19","hashOfConfig":"13"},{"size":2533,"mtime":1682323237949,"results":"20","hashOfConfig":"13"},{"size":881,"mtime":1681448687312,"results":"21","hashOfConfig":"13"},{"size":999,"mtime":1681880364832,"results":"22","hashOfConfig":"13"},{"size":686,"mtime":1681233930444,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"n9iizf",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"E:\\E-learning\\client\\src\\index.js",[],["48","49"],"E:\\E-learning\\client\\src\\App.js",[],"E:\\E-learning\\client\\src\\components\\Home\\Home.jsx",[],"E:\\E-learning\\client\\src\\components\\Navbar\\Navbar.jsx",[],"E:\\E-learning\\client\\src\\Cards\\Post\\Post.jsx",["50","51","52"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Post.css\"\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport { Accordion, AccordionDetails, AccordionSummary, Dialog, DialogActions, DialogContent } from '@mui/material'\r\nimport ExpandMore from '@mui/icons-material/ExpandMore'\r\nimport PlayCircleFilledWhiteIcon from '@mui/icons-material/PlayCircleFilledWhite';\r\n\r\nconst Post = ({ post }) => {\r\n\r\n    const [channel, setChannel] = React.useState({})\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const clickMe = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchChannel = async () => {\r\n            const res = await axios.get(`/posts/find/${post.userId}`)\r\n            setChannel(res.data)\r\n        }\r\n        fetchChannel()\r\n    }, [post.userId])\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <div className='post'>\r\n                <div className='container'>\r\n                    {/* <Link to={`/posts/${post._id}`} > */}\r\n                    <div className='thumbnail post-thumbnail'>\r\n                        <img src={post.imgUrl} alt='thumbnail' className='thumbimg' />\r\n                    </div>\r\n\r\n\r\n\r\n                    {/* </Link> */}\r\n                    <div>\r\n                        <p onClick={clickMe} className='play'><PlayCircleFilledWhiteIcon fontSize='large' /></p>\r\n\r\n                        <Accordion className=\"post2\">\r\n                            <AccordionSummary className='post-title' expandIcon={<ExpandMore />}>\r\n                                <h3>{post.title}</h3>\r\n\r\n                            </AccordionSummary>\r\n                            <AccordionDetails className='post-content'>\r\n                                <p>{post.desc}</p>\r\n\r\n                              \r\n                                \r\n                        <p className='dialog-updated'>{moment(post.createdAt).fromNow()} </p>\r\n\r\n                                <ul> Tags: {post.tags}</ul>\r\n                                \r\n\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n\r\n\r\n                        <Dialog open={open} onClose={handleClose}>\r\n                            <div className=\"dialog-title\">{post.title}</div>\r\n                            <div className=\"dialog-close\" onClick={handleClose}>X</div>\r\n                            <DialogContent>\r\n                                <video className=\"dialog-video\" controls width={500}>\r\n                                    <source src={post.videoUrl} />\r\n                                </video>\r\n                                <div className=\"dialog-desc\">{post.desc}</div>\r\n                                <div className=\"dialog-updated\">{moment(post.updatedAt).calendar()}</div>\r\n                            </DialogContent>\r\n                        </Dialog>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","E:\\E-learning\\client\\src\\firebase.js",[],"E:\\E-learning\\client\\src\\components\\Navbar\\LeftNav.jsx",[],"E:\\E-learning\\client\\src\\Cards\\Video\\Video.jsx",["53","54"],"E:\\E-learning\\client\\src\\redux\\store.js",[],"E:\\E-learning\\client\\src\\redux\\userSlice.js",[],"E:\\E-learning\\client\\src\\redux\\postSlice.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":6,"column":65,"nodeType":"61","messageId":"62","endLine":6,"endColumn":78},{"ruleId":"59","severity":1,"message":"64","line":12,"column":12,"nodeType":"61","messageId":"62","endLine":12,"endColumn":19},{"ruleId":"59","severity":1,"message":"65","line":15,"column":11,"nodeType":"61","messageId":"62","endLine":15,"endColumn":15},{"ruleId":"66","severity":1,"message":"67","line":65,"column":11,"nodeType":"68","endLine":65,"endColumn":71},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'DialogActions' is defined but never used.","'channel' is assigned a value but never used.","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]