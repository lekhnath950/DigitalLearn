[{"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\index.js":"1","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\App.js":"2","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\redux\\store.js":"3","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\redux\\userSlice.js":"4","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\redux\\discSlice.js":"5","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\redux\\postSlice.js":"6","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Fav.jsx":"7","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Home\\Home.jsx":"8","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Category\\Category.jsx":"9","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Discussion\\Discussion.jsx":"10","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Profile\\Profile.jsx":"11","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Auth\\Signup.jsx":"12","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Category\\Tag.jsx":"13","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Upload\\Upload.jsx":"14","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\AdminPanel\\Admin.jsx":"15","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\Cards\\Video\\Video.jsx":"16","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\firebase.js":"17","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Discussion\\Disc.jsx":"18","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Navbar\\Navbar.jsx":"19","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Navbar\\LeftNav.jsx":"20","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\Cards\\Post\\Post.jsx":"21","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\Cards\\Loader\\Loader.jsx":"22","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Navbar\\Menubar.jsx":"23"},{"size":559,"mtime":1682325900501,"results":"24","hashOfConfig":"25"},{"size":1777,"mtime":1684667375992,"results":"26","hashOfConfig":"25"},{"size":940,"mtime":1684667376063,"results":"27","hashOfConfig":"25"},{"size":999,"mtime":1682325900514,"results":"28","hashOfConfig":"25"},{"size":870,"mtime":1684667376050,"results":"29","hashOfConfig":"25"},{"size":1092,"mtime":1684667376052,"results":"30","hashOfConfig":"25"},{"size":981,"mtime":1684667376020,"results":"31","hashOfConfig":"25"},{"size":1297,"mtime":1684667376032,"results":"32","hashOfConfig":"25"},{"size":1804,"mtime":1684667376011,"results":"33","hashOfConfig":"25"},{"size":4022,"mtime":1684667376018,"results":"34","hashOfConfig":"25"},{"size":1244,"mtime":1684667376046,"results":"35","hashOfConfig":"25"},{"size":1454,"mtime":1684667376004,"results":"36","hashOfConfig":"25"},{"size":951,"mtime":1684049733309,"results":"37","hashOfConfig":"25"},{"size":4927,"mtime":1683778900441,"results":"38","hashOfConfig":"25"},{"size":2954,"mtime":1683778900415,"results":"39","hashOfConfig":"25"},{"size":4243,"mtime":1684667376000,"results":"40","hashOfConfig":"25"},{"size":460,"mtime":1682325900484,"results":"41","hashOfConfig":"25"},{"size":4465,"mtime":1684667376013,"results":"42","hashOfConfig":"25"},{"size":5373,"mtime":1684667376041,"results":"43","hashOfConfig":"25"},{"size":939,"mtime":1684667376035,"results":"44","hashOfConfig":"25"},{"size":4031,"mtime":1684667375997,"results":"45","hashOfConfig":"25"},{"size":306,"mtime":1684049733299,"results":"46","hashOfConfig":"25"},{"size":3749,"mtime":1684667376038,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nuwmgk",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\index.js",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\App.js",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\redux\\store.js",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\redux\\userSlice.js",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\redux\\discSlice.js",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\redux\\postSlice.js",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Fav.jsx",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Home\\Home.jsx",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Category\\Category.jsx",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Discussion\\Discussion.jsx",["98","99","100"],"import { discSuccess } from '../../redux/discSlice';\r\nimport axios from 'axios'\r\nimport './Discussion.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Navbar from '../Navbar/Navbar'\r\nimport LeftNav from '../Navbar/LeftNav'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Snackbar } from '@mui/material'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport Disc from './Disc'\r\nimport Search from '@mui/icons-material/Search'\r\n\r\nconst Discussion = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [msgOpen, setMsgOpen] = useState(false)\r\n  const [msg, setMsg] = useState(null)\r\n\r\n  const { discus } = useSelector(state => state.discc)\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchDiscussions = async () => {\r\n      try {\r\n        const response = await axios.post(`/review/discussion?page=${currentPage}`);\r\n        dispatch(discSuccess([...discus, ...response.data.discussions]));\r\n        setTotalPages(response.data.totalPages);\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchDiscussions()\r\n  }, [currentPage])\r\n\r\n\r\n  const loadMore = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const [topic, setTopic] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post(\r\n      \"/review/add\",\r\n      { topic },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    setOpen(!open)\r\n\r\n    const res = await axios.post(\"/review/getdisc\")\r\n    dispatch(discSuccess(res.data))\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  const [query, setQuery] = useState(\"\")\r\n  const [result, setResult] = useState([])\r\n\r\n  const searchHandle = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.get(`/review/disc/search?search=${query}`)\r\n      setResult(res.data)\r\n      dispatch(discSuccess(res.data))\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Navbar />\r\n      </div>\r\n      <div>\r\n        <LeftNav />\r\n      </div>\r\n\r\n      <div className=\"discussion\">\r\n\r\n        <div>\r\n          <form onSubmit={searchHandle} className='d-search'>\r\n            <input type=\"text\" value={query} onChange={(e) => setQuery(e.target.value)} placeholder='search' />\r\n            <button><Search /></button>\r\n          </form>\r\n        </div>\r\n\r\n\r\n\r\n        {\r\n          result && result.map(disc => (\r\n            <>\r\n              <Disc key={disc._id} disc={disc} reply={disc.reply} />\r\n            </>\r\n          ))\r\n        }\r\n\r\n\r\n        <div className=\"addDisc\">\r\n          <Button onClick={handleOpen}><AddCircleIcon />Create Discussion</Button>\r\n\r\n          <Dialog open={open} onClose={handleOpen}>\r\n\r\n            <DialogActions>\r\n              <button onClick={handleOpen}>X</button>\r\n            </DialogActions>\r\n\r\n            <DialogTitle> Add a Discussion</DialogTitle>\r\n\r\n            <DialogContent>\r\n              <form onSubmit={handleSubmit} className='ask'>\r\n                <input value={topic} type=\"text\" placeholder=\"Topic\" onChange={(e) => setTopic(e.target.value)} />\r\n                <button>Submit</button>\r\n              </form>\r\n            </DialogContent>\r\n\r\n          </Dialog>\r\n        </div>\r\n\r\n        {\r\n          discus && discus.map(disc => (\r\n            <>\r\n              <Disc key={disc.topic} disc={disc} reply={disc.reply} currentPage={currentPage} />\r\n            </>\r\n          ))\r\n        }\r\n\r\n      </div>\r\n\r\n      {currentPage < totalPages && (\r\n        <button style={{ 'marginLeft': '50vw' }} onClick={loadMore}>Load more</button>\r\n      )}\r\n\r\n      <Snackbar open={msgOpen} message={msg && msg} autoHideDuration={1000} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Discussion;\r\n","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Auth\\Signup.jsx",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Category\\Tag.jsx",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Upload\\Upload.jsx",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\AdminPanel\\Admin.jsx",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\Cards\\Video\\Video.jsx",["101"],"import axios from 'axios'\r\nimport './video.css'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { likeFailure, likeRequest, likeSuccess, postRequest, postSuccess } from '../../redux/postSlice';\r\nimport React, { useEffect, useState } from 'react'\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport LeftNav from '../../components/Navbar/LeftNav';\r\nimport { Button, Dialog, DialogActions, DialogContent, Tooltip } from '@mui/material';\r\nimport moment from 'moment';\r\nimport Loader from '../Loader/Loader';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\n\r\n\r\nconst Video = () => {\r\n\r\n  const { user} = useSelector((state) => state.user)\r\n  const { currentPost, loading } = useSelector((state) => state.postx)\r\n  const dispatch = useDispatch()\r\n\r\n  const path = useLocation().pathname.split(\"/\")[2]\r\n  const [channel, setChannel] = useState({})\r\n\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const OpenVideo = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const closee = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      dispatch(postRequest())\r\n      try {\r\n        const videoRes = await axios.get(`/posts/find/${path}`) //to get video from the postid\r\n        const channelRes = await axios.get(`/users/finds/${videoRes.data.userId}`)  //to get the channel data\r\n        setChannel(channelRes.data)\r\n        dispatch(postSuccess(videoRes.data))\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [path, dispatch])\r\n\r\n  const [liked,setLiked] = useState(false)\r\n\r\n  const likeHandle1 = async () => {\r\n    await axios.put(`/users/love/${currentPost._id}`)\r\n  }\r\n\r\n    const likeHandle = async () => {\r\n      dispatch(likeRequest());\r\n      try {\r\n        await axios.put(`/users/love/${currentPost._id}`);\r\n        if (liked) {\r\n          setLiked(false);\r\n        } else {\r\n          setLiked(true);\r\n        }\r\n        dispatch(likeSuccess('Post Liked'));\r\n        const videoRes = await axios.get(`/posts/find/${path}`) //to get video from the postid\r\n        const channelRes = await axios.get(`/users/finds/${videoRes.data.userId}`)  //to get the channel data\r\n        setChannel(channelRes.data)\r\n        dispatch(postSuccess(videoRes.data))\r\n      } catch (error) {\r\n        console.log(error);\r\n        dispatch(likeFailure('Failed to like the post'));\r\n      }\r\n    };\r\n  \r\n  // useEffect(()=> {\r\n  //   likeHandle();\r\n  // },[currentPost._id])\r\n \r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      currentPost?.likes.forEach((item) => {\r\n        if (item === user._id) {\r\n          setLiked(true);\r\n        }\r\n      });\r\n    }\r\n  }, [currentPost?.likes, user]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <div className='videoPage'>\r\n        <div className='navbar-video'>\r\n          <LeftNav />\r\n        </div>\r\n\r\n{\r\n  loading && (\r\n      <Loader/>\r\n\r\n  )\r\n}\r\n\r\n\r\n{ currentPost && (\r\n        <div className='video-feed' >\r\n\r\n        <div  className='v-top'>\r\n          <img onClick={OpenVideo} src={currentPost.imgUrl} width={400} alt=\"post\"/> <br/>\r\n          <Tooltip title=\"Add to Favorite\">\r\n          <span><button onClick={likeHandle}> {liked? <FavoriteIcon style={{'color':'red'}}/> :<FavoriteBorderIcon/>} </button></span>\r\n          </Tooltip>\r\n        </div>\r\n\r\n\r\n        <div className='v-info'>\r\n\r\n         \r\n        <h3>{currentPost.title} </h3>\r\n        <div className='v-data'>\r\n        <p>posted by:  {channel.name}</p>\r\n        <p>{moment(currentPost.createdAt).fromNow()}</p>\r\n        </div>\r\n\r\n\r\n          <p className='v-desc'>{currentPost.desc}</p>\r\n           \r\n        </div>\r\n\r\n        </div>\r\n)}\r\n\r\n      </div>\r\n\r\n{  \r\ncurrentPost && (\r\n<Dialog open={open} onClose={closee}>\r\n        <DialogActions>\r\n          <Button onClick={closee} variant='outlined'>close</Button>\r\n        </DialogActions>\r\n        <DialogContent>\r\n          <video width=\"500px\" controls>\r\n            <source src={currentPost.videoUrl} type=\"video/mp4\" />\r\n\r\n          </video>\r\n\r\n        </DialogContent>\r\n      </Dialog>\r\n      \r\n      )  }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Video","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\firebase.js",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Discussion\\Disc.jsx",["102","103","104","105"],"import axios from 'axios'\r\nimport './Discussion.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport moment from 'moment'\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { discFailure, discSuccess } from '../../redux/discSlice';\r\n\r\n\r\nconst Disc = ({ disc, reply }) => {\r\n\r\n  const { user } = useSelector(state => state.user)\r\n  // const { discus } = useSelector(state => state.discc)\r\n\r\n  const [replyInputs, setReplyInputs] = useState({});\r\n\r\n\r\n  const handleReplyChange = (e, id) => {\r\n    setReplyInputs((prevInputs) => ({\r\n      ...prevInputs,\r\n      [id]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [msgOpen, setMsgOpen] = useState(false)\r\n  const [msg, setMsg] = useState(null)\r\n\r\n  const dispatch = useDispatch();\r\n  const deleteHandler = async (id) => {\r\n    try {\r\n      await window.confirm(\"Want to delete?\")\r\n      await axios.delete(`/review/Disc/${id}`)\r\n\r\n      const res1 = await axios.post(\"/review/getdisc\")\r\n      dispatch(discSuccess(res1.data));\r\n    } catch (error) {\r\n      dispatch(discFailure(error))\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const deleteReply = async (id, replyid) => {\r\n    try {\r\n      await window.confirm(\"want to delete?\")\r\n      const res = await axios.delete(`/review/${id}/replies/${replyid}`)\r\n      setMsg(res.data)\r\n      setMsgOpen(true)\r\n      const res1 = await axios.post(\"/review/getdisc\")\r\n      dispatch(discSuccess(res1.data));\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleReply = async (e, id) => {\r\n    e.preventDefault();\r\n    await axios.post(\r\n      `/review/addReply/${id}`,\r\n      { rep: replyInputs[id] },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    const res = await axios.post(\"/review/getdisc\")\r\n    dispatch(discSuccess(res.data));\r\n    console.log(res.data)\r\n\r\n\r\n    setReplyInputs((prevInputs) => ({\r\n      ...prevInputs,\r\n      [id]: \"\", // Clear the reply input after submitting\r\n    }));\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    setReplyInputs({});\r\n  }, [reply]);\r\n\r\n\r\n\r\n  return (\r\n    <div >\r\n\r\n      <>\r\n        <div>\r\n          <div className=\"Disc\" >\r\n            <h4 className=\"D-topic\">{disc.topic}</h4>\r\n            <div className='D-info'>\r\n              <p> <span>Posted by:</span>\r\n                {user && disc.userId && disc.userId._id && (disc.userId._id !== user._id)\r\n                  ? <>{disc.userId.name} </> : \"you\"}\r\n              </p>\r\n\r\n              <p>{moment(disc.createdAt).fromNow()}</p>\r\n              {\r\n                user && disc.userId && (disc.userId._id === user._id) ? (\r\n                  <span onClick={() => deleteHandler(disc._id, disc.userId)}><DeleteIcon fontSize=\"small\" /></span>\r\n                ) : null\r\n              }\r\n            </div>\r\n\r\n\r\n\r\n            <form onSubmit={(e) => handleReply(e, disc._id)} className='D-rep' >\r\n              <textarea maxLength={1000} value={replyInputs[disc._id] || \"\"} type=\"text\" placeholder={user ? \"Add a Reply\" : \"Login to add a reply\"} onChange={(e) => handleReplyChange(e, disc._id)} />\r\n              <button disabled={!user}><SendIcon fontSize=\"small\" /></button>\r\n            </form>\r\n\r\n            {reply &&\r\n              reply.map((replydisc) => (\r\n                <>\r\n                  <div className='D-replies'>\r\n                    <div className=\"D-reply\" key={replydisc._id}>\r\n                      <p className='D-replyName'>Replied by {user && disc && (replydisc.userId._id === user._id) ? \"you\" : replydisc.userId.name}</p>\r\n                      <p className=\"D-replied\">{replydisc.rep}</p>\r\n                    </div>\r\n\r\n                    <div className='D-footer'>\r\n                      <p>{moment(replydisc.time).fromNow()}</p>\r\n                      {\r\n                        user && replydisc && (replydisc.userId._id === user._id) ? (\r\n                          <span onClick={() => deleteReply(disc._id, replydisc._id)}><DeleteIcon fontSize=\"small\" /></span>\r\n                        ) : \"\"\r\n                      }\r\n\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n                </>\r\n              ))}\r\n            <p className='no-reply'>{disc.reply?.length === 0 ? \"No Reply\" : \"\"} </p>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Disc","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Navbar\\LeftNav.jsx",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\Cards\\Post\\Post.jsx",["106"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Post.css\"\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport { Dialog, DialogContent, DialogTitle } from '@mui/material'\r\nimport { useSelector } from 'react-redux'\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\n\r\n\r\nconst Post = ({ post }) => {\r\n\r\n    const {user} = useSelector(state=> state.user) \r\n\r\n    const [channel, setChannel] = useState({})\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [editTitle, setEditTitle] = useState('')\r\n    const [editDesc, setEditDesc] = useState('')\r\n\r\n    const handleClose = async () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchChannel = async () => {\r\n            const res = await axios.get(`/posts/find/${post._id}`)\r\n            setChannel(res.data)\r\n        }\r\n        fetchChannel() \r\n    }, [post._id])\r\n\r\n\r\n    const editHandler = async (e,pid) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const updatePost = {\r\n                title: editTitle,\r\n                desc: editDesc\r\n            }\r\n           await axios.put(`/posts/${pid}`,updatePost)\r\n           setOpen(false)\r\n           setEditTitle('')\r\n           setEditDesc('')\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    const handleEditPost = () => {\r\n        setEditTitle(post.title);\r\n        setEditDesc(post.desc);\r\n        setOpen(true);\r\n      };\r\n\r\n\r\n    const deleteHandler = async (pid) => {\r\n        await window.confirm(\"want to delete?\")\r\n        await axios.delete(`/posts/${pid}`)\r\n    }\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const handleDropdownToggle = () => {\r\n        setIsOpen(!isOpen);\r\n      };\r\n    return (\r\n        <div> \r\n\r\n\r\n            <div className='post'>\r\n                <div className='abb'>\r\n                    <div className='imggg'>\r\n                    <Link to={`/posts/${post._id}`} >\r\n                        <img src={post.imgUrl} alt=\"\" height={200} />\r\n                    </Link>\r\n                    </div>\r\n\r\n                    <div className='text-post'>\r\n                        <h3>{post.title} <span> [{moment(post.createdAt).fromNow()}]  </span></h3>\r\n\r\n\r\n                        <p>{post.desc}</p>\r\n                    </div>\r\n\r\n                    <div className='iii'>\r\n                    <FavoriteBorderIcon />\r\n                    <p>{post.likes.length}</p>\r\n                    <button onClick={handleDropdownToggle}><MoreHorizIcon/></button>\r\n                    {\r\n                        user && user._id === post.userId &&\r\n                        \r\n                            isOpen && (\r\n                                <>\r\n                                <button onClick={handleEditPost}>edit post</button>\r\n                                <button onClick={()=> deleteHandler(post._id)}>delete post</button>\r\n                                </>\r\n                                )\r\n                            \r\n                        }  \r\n                    {/* <p>{channel.__v}</p> */}\r\n\r\n                    </div>\r\n\r\n                    <Dialog open={open} onClose={handleClose}>\r\n                        <DialogTitle>\r\n\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <form onSubmit={(e)=> editHandler(e,post._id)}>\r\n                            <textarea type='text' value={editTitle} placeholder='title' onChange={(e)=> setEditTitle(e.target.value)} />\r\n                            <textarea type=\"text\" value={editDesc} placeholder='description' onChange={(e)=> setEditDesc(e.target.value)} />\r\n                            <button type=\"submit\">save</button>\r\n                            </form>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\Cards\\Loader\\Loader.jsx",[],"C:\\Users\\Sourabh\\Documents\\Projects\\Major Project\\DigitalLearn\\client\\src\\components\\Navbar\\Menubar.jsx",[],{"ruleId":"107","severity":1,"message":"108","line":21,"column":19,"nodeType":"109","messageId":"110","endLine":21,"endColumn":29},{"ruleId":"107","severity":1,"message":"111","line":22,"column":15,"nodeType":"109","messageId":"110","endLine":22,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":40,"column":6,"nodeType":"114","endLine":40,"endColumn":19,"suggestions":"115"},{"ruleId":"107","severity":1,"message":"116","line":52,"column":9,"nodeType":"109","messageId":"110","endLine":52,"endColumn":20},{"ruleId":"107","severity":1,"message":"117","line":26,"column":10,"nodeType":"109","messageId":"110","endLine":26,"endColumn":14},{"ruleId":"107","severity":1,"message":"118","line":26,"column":16,"nodeType":"109","messageId":"110","endLine":26,"endColumn":23},{"ruleId":"107","severity":1,"message":"119","line":27,"column":10,"nodeType":"109","messageId":"110","endLine":27,"endColumn":17},{"ruleId":"107","severity":1,"message":"120","line":28,"column":10,"nodeType":"109","messageId":"110","endLine":28,"endColumn":13},{"ruleId":"107","severity":1,"message":"121","line":16,"column":12,"nodeType":"109","messageId":"110","endLine":16,"endColumn":19},"no-unused-vars","'setMsgOpen' is assigned a value but never used.","Identifier","unusedVar","'setMsg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'discus' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["122"],"'likeHandle1' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'msgOpen' is assigned a value but never used.","'msg' is assigned a value but never used.","'channel' is assigned a value but never used.",{"desc":"123","fix":"124"},"Update the dependencies array to be: [currentPage, discus, dispatch]",{"range":"125","text":"126"},[1297,1310],"[currentPage, discus, dispatch]"]